{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Libraries\nimport flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n// Styles\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n/**\n * @class Timer\n * @classdesc A class that implements a countdown timer.\n */\nclass Timer {\n  /**\n   * @param {string} selector - The CSS selector for the timer container.\n   */\n  constructor(selector) {\n    /**\n     * @private\n     * @type {string}\n     * @description The CSS selector for the timer container.\n     */\n    this._selector = selector;\n\n    /**\n     * @private\n     * @type {Date | null}\n     * @description The target date for the countdown.\n     */\n    this._targetDate = null;\n\n    /**\n     * @private\n     * @type {number | null}\n     * @description The ID of the interval timer.\n     */\n    this._intervalId = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     * @description Indicates whether the timer is currently active.\n     */\n    this._isActive = false;\n\n    /**\n     * @private\n     * @type {object}\n     * @description Configuration options for the flatpickr instance.\n     */\n    this._flatpickrOptions = {\n      enableTime: true,\n      time_24hr: true,\n      defaultDate: new Date(),\n      minuteIncrement: 1,\n      onClose: (selectedDates) => {\n        const selectedDate = selectedDates[0];\n        if (selectedDate < new Date()) {\n          iziToast.error({\n            message: 'Please choose a date in the future'\n          });\n          return;\n        }\n        this._targetDate = selectedDate;\n        this._startButton.disabled = false;\n      },\n    };\n\n    /**\n     * @private\n     * @type {HTMLButtonElement}\n     * @description The button element that starts the timer.\n     */\n    this._startButton = document.querySelector(`${this._selector} button[data-start]`);\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     * @description The main container element of the timer.\n     */\n    this._timerContainer = document.querySelector(this._selector);\n  }\n\n  /**\n   * @private\n   * @method _start\n   * @description Starts the countdown timer.\n   */\n  _start() {\n    if (this._isActive) {\n      return;\n    }\n    this._isActive = true;\n\n    const delta = this._targetDate - new Date();\n    if (delta <= 0) {\n      iziToast.show({\n        color: 'red',\n        title: 'Error',\n        message: 'Please choose a date in the future'\n      });\n      return;\n    }\n\n    this._intervalId = setInterval(() => {\n      const currentTime = new Date();\n      const delta = this._targetDate - currentTime;\n\n      if (delta <= 0) {\n        clearInterval(this._intervalId);\n        const dateTimePicker = this._timerContainer.querySelector('input#datetime-picker');\n        if (dateTimePicker) {\n          dateTimePicker.disabled = false;\n          this._isActive = false;\n        }\n        return;\n      }\n\n      const { days, hours, minutes, seconds } = this._convertMs(delta);\n      this._timerContainer.querySelector(`.value[data-days]`).textContent = String(days).padStart(2, '0');\n      this._timerContainer.querySelector(`.value[data-hours]`).textContent = String(hours).padStart(2, '0');\n      this._timerContainer.querySelector(`.value[data-minutes]`).textContent = String(minutes).padStart(2, '0');\n      this._timerContainer.querySelector(`.value[data-seconds]`).textContent = String(seconds).padStart(2, '0');\n    }, 1000);\n  }\n\n  /**\n   * @private\n   * @method _convertMs\n   * @param {number} ms - The number of milliseconds to convert.\n   * @returns {object} An object containing days, hours, minutes, and seconds.\n   */\n  _convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  /**\n   * @method init\n   * @description Initializes the timer functionality. Sets up the flatpickr instance and the start button event listener.\n   */\n  init() {\n    flatpickr(`${this._selector} input#datetime-picker`, this._flatpickrOptions);\n    this._startButton.disabled = true;\n    this._startButton.addEventListener('click', () => {\n      this._start();\n      this._startButton.disabled = true;\n      const dateTimePicker = this._timerContainer.querySelector('input#datetime-picker');\n      if (dateTimePicker) {\n        dateTimePicker.disabled = true;\n      }\n    });\n  }\n}\n\nconst timer = new Timer('div.timer-wrapper');\ntimer.init();"],"names":["Timer","selector","selectedDates","selectedDate","iziToast","currentTime","delta","dateTimePicker","days","hours","minutes","seconds","ms","flatpickr","timer"],"mappings":"2GAWA,MAAMA,CAAM,CAIV,YAAYC,EAAU,CAMpB,KAAK,UAAYA,EAOjB,KAAK,YAAc,KAOnB,KAAK,YAAc,KAOnB,KAAK,UAAY,GAOjB,KAAK,kBAAoB,CACvB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAUC,GAAkB,CAC1B,MAAMC,EAAeD,EAAc,CAAC,EACpC,GAAIC,EAAe,IAAI,KAAQ,CAC7BC,EAAS,MAAM,CACb,QAAS,oCACrB,CAAW,EACD,MACD,CACD,KAAK,YAAcD,EACnB,KAAK,aAAa,SAAW,EAC9B,CACP,EAOI,KAAK,aAAe,SAAS,cAAc,GAAG,KAAK,SAAS,qBAAqB,EAOjF,KAAK,gBAAkB,SAAS,cAAc,KAAK,SAAS,CAC7D,CAOD,QAAS,CACP,GAAI,KAAK,UACP,OAKF,GAHA,KAAK,UAAY,GAEH,KAAK,YAAc,IAAI,MACxB,EAAG,CACdC,EAAS,KAAK,CACZ,MAAO,MACP,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,MACD,CAED,KAAK,YAAc,YAAY,IAAM,CACnC,MAAMC,EAAc,IAAI,KAClBC,EAAQ,KAAK,YAAcD,EAEjC,GAAIC,GAAS,EAAG,CACd,cAAc,KAAK,WAAW,EAC9B,MAAMC,EAAiB,KAAK,gBAAgB,cAAc,uBAAuB,EAC7EA,IACFA,EAAe,SAAW,GAC1B,KAAK,UAAY,IAEnB,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAK,KAAK,WAAWL,CAAK,EAC/D,KAAK,gBAAgB,cAAc,mBAAmB,EAAE,YAAc,OAAOE,CAAI,EAAE,SAAS,EAAG,GAAG,EAClG,KAAK,gBAAgB,cAAc,oBAAoB,EAAE,YAAc,OAAOC,CAAK,EAAE,SAAS,EAAG,GAAG,EACpG,KAAK,gBAAgB,cAAc,sBAAsB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,EACxG,KAAK,gBAAgB,cAAc,sBAAsB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,CACzG,EAAE,GAAI,CACR,CAQD,WAAWC,EAAI,CAQb,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAE1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EAEpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EAEjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAMD,MAAO,CACLE,EAAU,GAAG,KAAK,SAAS,yBAA0B,KAAK,iBAAiB,EAC3E,KAAK,aAAa,SAAW,GAC7B,KAAK,aAAa,iBAAiB,QAAS,IAAM,CAChD,KAAK,OAAM,EACX,KAAK,aAAa,SAAW,GAC7B,MAAMN,EAAiB,KAAK,gBAAgB,cAAc,uBAAuB,EAC7EA,IACFA,EAAe,SAAW,GAElC,CAAK,CACF,CACH,CAEA,MAAMO,EAAQ,IAAId,EAAM,mBAAmB,EAC3Cc,EAAM,KAAM"}